generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model FreezerApi {
  id           Int      @id @default(autoincrement())
  cliente_id   Int
  freezer_id   Int
  temp_atual   Decimal  @db.Decimal(10, 0)
  status_porta String   @db.VarChar(45)
  createdAt    DateTime @default(now()) @db.Timestamp(0)

  @@index([cliente_id], map: "cliente_id_idx")
  @@map("freezerapi")
}

model ConfigFreezer {
  id          Int       @id @default(autoincrement())
  cliente_id  Int
  freezer_id  Int
  temp_padrao Int
  temp_min    Int
  temp_max    Int
  porta_tempo Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @db.Timestamp(0)
  users       Users     @relation(fields: [cliente_id], references: [cliente_id], onDelete: NoAction, onUpdate: NoAction, map: "cliente_id")

  @@index([cliente_id], map: "cliente_id_idx")
  @@map("configfreezer")
}

model Users {
  cliente_id    Int             @id @default(autoincrement())
  email         String          @db.VarChar(127)
  password      String          @db.VarChar(127)
  isAvailable   Int?            @default(1) @db.TinyInt
  configfreezer ConfigFreezer[]

  @@map("users")
}

model LogsFreezer {
  id           Int       @id @default(autoincrement())
  cliente_id   Int
  freezer_id   Int
  temp_atual   Decimal   @db.Decimal(10, 0)
  temp_padrao  Decimal   @db.Decimal(10, 0)
  temp_min     Int
  temp_max     Int
  porta_tempo  Decimal   @db.Decimal(10, 0)
  porta_status String    @db.VarChar(45)
  Erro         String?   @default("none") @db.VarChar(45)
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  // Dia          String?   @default(dbgenerated("(date_format(curdate(),_utf8mb4\\'%d/%m/%Y\\'))")) @db.VarChar(10)
  // Hora         DateTime? @default(dbgenerated("(curtime())")) @db.Time(0)

  @@map("logsfreezer")
}
